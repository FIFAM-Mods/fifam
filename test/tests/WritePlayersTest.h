#pragma once
#include "FifamDbEnvironment.h"
#include "FifamPlayerLevel.h"

template<typename Game, typename DbType>
class WritePlayersTest {
public:
    WritePlayersTest() {
        FifamDatabase *db = GetEnvironment<FifamDbEnvironment<Game, DbType>>().GetDatabase();

        FifamWriter writer(Utils::Format(L"players_%02d.csv", Game::id()), Game::id(), FifamVersion(Game::year(), Game::vernum()), Game::unicode());
        if (writer.Available()) {
            writer.WriteLine(
                L"Country",
                L"Club",
                L"PlayerId",
                L"PlayerName",
                L"LastName",
                L"FirstName",
                L"Pseudonym",
                L"Nickname",
                L"PlayerLevel_12",
                L"PlayerLevel_13",
                L"EmpicsId",
                L"Nationality_0",
                L"Nationality_1",
                L"Languages_0",
                L"Languages_1",
                L"Languages_2",
                L"Languages_3",
                L"Birthday",
                L"InReserveTeam",
                L"InYouthTeam",
                L"IsNaturalised",
                L"IsBasque",
                L"IsRealPlayer",
                L"Talent",
                L"TacticalEducation",
                L"Potential",
                L"LeftFoot",
                L"RightFoot",
                L"HeroStatus",
                L"ShirtNumberFirstTeam",
                L"ShirtNumberReserveTeam",
                L"NationalExperience",
                L"InternationalExperience",
                L"GeneralExperience",
                L"MainPosition",
                L"PositionBias_None",
                L"PositionBias_GK",
                L"PositionBias_RB",
                L"PositionBias_LB",
                L"PositionBias_CB",
                L"PositionBias_SW",
                L"PositionBias_RWB",
                L"PositionBias_LWB",
                L"PositionBias_ANC",
                L"PositionBias_DM",
                L"PositionBias_RM",
                L"PositionBias_LM",
                L"PositionBias_CM",
                L"PositionBias_RW",
                L"PositionBias_LW",
                L"PositionBias_AM",
                L"PositionBias_CF",
                L"PositionBias_ST",
                L"MaxBias",
                L"PlayingStyle",
                L"BallControl",
                L"Volleys",
                L"Dribbling",
                L"Finishing",
                L"ShotPower",
                L"LongShots",
                L"Crossing",
                L"Passing",
                L"LongPassing",
                L"Header",
                L"TacklingGeneral",
                L"TackleStanding",
                L"TackleSliding",
                L"ManMarking",
                L"Technique",
                L"Creativity",
                L"Flair",
                L"Touch",
                L"Balance",
                L"Acceleration",
                L"Pace",
                L"Agility",
                L"Jumping",
                L"Strength",
                L"Stamina",
                L"WorkRate",
                L"ForwardRuns",
                L"PosOffensive",
                L"PosDefensive",
                L"Vision",
                L"Reactions",
                L"TacticAwareness",
                L"Aggression",
                L"Composure",
                L"Consistency",
                L"Leadership",
                L"Anticipation",
                L"Concentration",
                L"Decision",
                L"Determination",
                L"TeamWork",
                L"Intimidation",
                L"FreeKicks",
                L"Corners",
                L"PenaltyShot",
                L"Diving",
                L"Reflexes",
                L"Handling",
                L"Positioning",
                L"OneOnOne",
                L"Kicking",
                L"Punching",
                L"ShotStopping",
                L"Throwing",
                L"GkCrosses",
                L"Character",
                //player->mAppearance,
                L"SpecialFace",
                L"Height",
                L"Weight",
                L"ShoeType",
                L"LongSleeves",
                L"FirstClub",
                L"PreviousClub",
                L"NationalTeamMatches",
                L"NationalTeamGoals",
                L"CurrentlyInNationalTeam",
                L"RetiredFromNationalTeam",
                L"NoContractExtension",
                L"ContractIsCancelledIfRelegated",
                L"IsCaptain",
                //player->mStartingConditions,
                L"CurrentEstimatedMarketValue",
                L"PlayerAgent",
                L"FavouriteClub",
                L"WouldnSignFor",
                L"ManagerFavouritePlayer",
                L"TransferRumors_0",
                L"TransferRumors_1",
                L"TransferRumors_3",
                L"ManagerMotivationSkills",
                L"ManagerCoachingSkills",
                L"ManagerGoalkeepersTraining",
                L"ManagerNegotiationSkills",
                L"ManagerFavouriteFormation",
                L"ChairmanStability",
                L"Comment",
                L"Unknown_1"
            );
            for (auto country : db->mCountries) {
                if (country) {
                    for (auto club : country->mClubs) {
                        for (auto player : club->mPlayers) {
                            writer.WriteLine(
                                Quoted(FifamTr(country->mName)),
                                Quoted(FifamTr(club->mName)),
                                player->mID,
                                Quoted(player->GetName()),
                                Quoted(player->mLastName),
                                Quoted(player->mFirstName),
                                Quoted(player->mPseudonym),
                                Quoted(player->mNickname),
                                FifamPlayerLevel::GetPlayerLevel12(player, player->mMainPosition, player->mPlayingStyle),
                                FifamPlayerLevel::GetPlayerLevel13(player, player->mMainPosition, player->mPlayingStyle),
                                player->mEmpicsId,
                                player->mNationality[0].ToStr(),
                                player->mNationality[1].ToStr(),
                                player->mLanguages[0].ToStr(),
                                player->mLanguages[1].ToStr(),
                                player->mLanguages[2].ToStr(),
                                player->mLanguages[3].ToStr(),
                                player->mBirthday.ToString(),
                                player->mInReserveTeam,
                                player->mInYouthTeam,
                                player->mIsNaturalised,
                                player->mIsBasque,
                                player->mIsRealPlayer,
                                player->mTalent,
                                player->mTacticalEducation,
                                player->mPotential,
                                player->mLeftFoot,
                                player->mRightFoot,
                                player->mHeroStatus,
                                player->mShirtNumberFirstTeam,
                                player->mShirtNumberReserveTeam,
                                player->mNationalExperience,
                                player->mInternationalExperience,
                                player->mGeneralExperience,
                                player->mMainPosition.ToStr(),
                                (UChar)player->mPositionBias[0],
                                (UChar)player->mPositionBias[1],
                                (UChar)player->mPositionBias[2],
                                (UChar)player->mPositionBias[3],
                                (UChar)player->mPositionBias[4],
                                (UChar)player->mPositionBias[5],
                                (UChar)player->mPositionBias[6],
                                (UChar)player->mPositionBias[7],
                                (UChar)player->mPositionBias[8],
                                (UChar)player->mPositionBias[9],
                                (UChar)player->mPositionBias[10],
                                (UChar)player->mPositionBias[11],
                                (UChar)player->mPositionBias[12],
                                (UChar)player->mPositionBias[13],
                                (UChar)player->mPositionBias[14],
                                (UChar)player->mPositionBias[15],
                                (UChar)player->mPositionBias[16],
                                (UChar)player->mPositionBias[17],
                                (UChar)player->mMaxBias,
                                player->mPlayingStyle.ToStr(),
                                player->mAttributes.BallControl,
                                player->mAttributes.Volleys,
                                player->mAttributes.Dribbling,
                                player->mAttributes.Finishing,
                                player->mAttributes.ShotPower,
                                player->mAttributes.LongShots,
                                player->mAttributes.Crossing,
                                player->mAttributes.Passing,
                                player->mAttributes.LongPassing,
                                player->mAttributes.Header,
                                player->mAttributes.TacklingGeneral,
                                player->mAttributes.TackleStanding,
                                player->mAttributes.TackleSliding,
                                player->mAttributes.ManMarking,
                                player->mAttributes.Technique,
                                player->mAttributes.Creativity,
                                player->mAttributes.Flair,
                                player->mAttributes.Touch,
                                player->mAttributes.Balance,
                                player->mAttributes.Acceleration,
                                player->mAttributes.Pace,
                                player->mAttributes.Agility,
                                player->mAttributes.Jumping,
                                player->mAttributes.Strength,
                                player->mAttributes.Stamina,
                                player->mAttributes.WorkRate,
                                player->mAttributes.ForwardRuns,
                                player->mAttributes.PosOffensive,
                                player->mAttributes.PosDefensive,
                                player->mAttributes.Vision,
                                player->mAttributes.Reactions,
                                player->mAttributes.TacticAwareness,
                                player->mAttributes.Aggression,
                                player->mAttributes.Composure,
                                player->mAttributes.Consistency,
                                player->mAttributes.Leadership,
                                player->mAttributes.Anticipation,
                                player->mAttributes.Concentration,
                                player->mAttributes.Decision,
                                player->mAttributes.Determination,
                                player->mAttributes.TeamWork,
                                player->mAttributes.Intimidation,
                                player->mAttributes.FreeKicks,
                                player->mAttributes.Corners,
                                player->mAttributes.PenaltyShot,
                                player->mAttributes.Diving,
                                player->mAttributes.Reflexes,
                                player->mAttributes.Handling,
                                player->mAttributes.Positioning,
                                player->mAttributes.OneOnOne,
                                player->mAttributes.Kicking,
                                player->mAttributes.Punching,
                                player->mAttributes.ShotStopping,
                                player->mAttributes.Throwing,
                                player->mAttributes.GkCrosses,
                                player->mCharacter.ToStr(L"|"),
                                //player->mAppearance,
                                player->mSpecialFace,
                                player->mHeight,
                                player->mWeight,
                                player->mShoeType.ToStr(),
                                player->mLongSleeves,
                                Quoted(player->mFirstClub.GetTeamName()),
                                Quoted(player->mPreviousClub.GetTeamName()),
                                player->mNationalTeamMatches,
                                player->mNationalTeamGoals,
                                player->mCurrentlyInNationalTeam,
                                player->mRetiredFromNationalTeam,
                                player->mNoContractExtension,
                                player->mContractIsCancelledIfRelegated,
                                player->mIsCaptain,
                                //player->mStartingConditions,
                                player->mCurrentEstimatedMarketValue,
                                player->mPlayerAgent.ToStr(),
                                Quoted(player->mFavouriteClub.GetTeamName()),
                                Quoted(player->mWouldnSignFor.GetTeamName()),
                                Quoted(FifamUtils::GetPlayerName(player->mManagerFavouritePlayer)),
                                Quoted(player->mTransferRumors[0].GetTeamName()),
                                Quoted(player->mTransferRumors[1].GetTeamName()),
                                Quoted(player->mTransferRumors[3].GetTeamName()),
                                player->mManagerMotivationSkills,
                                player->mManagerCoachingSkills,
                                player->mManagerGoalkeepersTraining,
                                player->mManagerNegotiationSkills,
                                player->mManagerFavouriteFormation.ToStr(),
                                player->mChairmanStability.ToStr(),
                                Quoted(player->mComment),
                                player->Unknown._1
                            );
                        }
                    }
                }
            }
        }
    }
};
