#include "FifamPlayerLevel.h"
#include "FifamPlayer.h"

Array<Float, 18> FifamPlayerLevel::GetDefaultBiasValues(FifamPlayerPosition const &position) {
    Array<Float, 18> ary;
    switch (position.ToInt()) {
        // None  GK   RB   LB   CB   SW  RWB  LWB  ANC   DM   RM   LM   CM   RW   LW   AM   CF   ST
    default:
        ary = { 0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0 }; break;
    case FifamPlayerPosition::GK:
        ary = { 0, 100,  40,  40,  40,  40,  40,  40,  40,  40,  40,  40,  40,  40,  40,  40,  40,  40 }; break;
    case FifamPlayerPosition::RB:
        ary = { 0,  40, 100,  90,  85,  70,  95,  85,  70,  85,  90,  85,  75,  85,  80,  75,  70,  70 }; break;
    case FifamPlayerPosition::LB:
        ary = { 0,  40,  90, 100,  85,  70,  85,  95,  70,  85,  85,  90,  75,  80,  85,  75,  70,  70 }; break;
    case FifamPlayerPosition::CB:
        ary = { 0,  40,  85,  85, 100,  85,  70,  70,  80,  85,  75,  75,  80,  70,  70,  75,  70,  70 }; break;
    case FifamPlayerPosition::SW:
        ary = { 0,  40,  85,  85,  95, 100,  75,  75,  90,  90,  70,  70,  80,  40,  40,  40,  40,  40 }; break;
    case FifamPlayerPosition::RWB:
        ary = { 0,  40,  95,  85,  80,  70, 100,  95,  70,  85,  90,  85,  75,  85,  80,  75,  70,  70 }; break;
    case FifamPlayerPosition::LWB:
        ary = { 0,  40,  85,  95,  80,  70,  95, 100,  70,  85,  85,  90,  75,  80,  85,  75,  70,  70 }; break;
    case FifamPlayerPosition::ANC:
        ary = { 0,  40,  85,  85,  90,  85,  70,  70, 100,  90,  75,  75,  85,  70,  70,  80,  70,  70 }; break;
    case FifamPlayerPosition::DM:
        ary = { 0,  40,  85,  85,  85,  85,  70,  70,  90, 100,  80,  80,  90,  75,  75,  85,  75,  75 }; break;
    case FifamPlayerPosition::RM:
        ary = { 0,  40,  90,  85,  75,  70,  90,  85,  70,  80, 100,  90,  85,  95,  85,  85,  80,  75 }; break;
    case FifamPlayerPosition::LM:
        ary = { 0,  40,  85,  90,  75,  70,  85,  90,  70,  80,  90, 100,  85,  85,  95,  85,  80,  75 }; break;
    case FifamPlayerPosition::CM:
        ary = { 0,  40,  75,  75,  80,  75,  75,  75,  85,  90,  85,  85, 100,  80,  80,  90,  85,  80 }; break;
    case FifamPlayerPosition::RW:
        ary = { 0,  40,  85,  80,  70,  70,  85,  80,  70,  75,  95,  85,  80, 100,  95,  85,  90,  85 }; break;
    case FifamPlayerPosition::LW:
        ary = { 0,  40,  80,  85,  70,  70,  80,  85,  70,  75,  85,  95,  80,  95, 100,  85,  90,  85 }; break;
    case FifamPlayerPosition::AM:
        ary = { 0,  40,  75,  75,  75,  70,  75,  75,  75,  85,  85,  85,  90,  85,  85, 100,  90,  85 }; break;
    case FifamPlayerPosition::CF:
        ary = { 0,  40,  70,  70,  70,  70,  75,  75,  70,  75,  80,  80,  85,  90,  90,  90, 100,  95 }; break;
    case FifamPlayerPosition::ST:
        ary = { 0,  40,  70,  70,  70,  70,  75,  75,  70,  75,  75,  75,  80,  85,  85,  85,  95, 100 }; break;
        // None  GK   RB   LB   CB   SW  RWB  LWB  ANC   DM   RM   LM   CM   RW   LW   AM   CF   ST
    }
    return ary;
}

FifamPlayerPlayingStyle FifamPlayerLevel::GetBestStyleForPlayer(FifamPlayer *player, Bool includeNewStyles) {
    if (player->mMainPosition == FifamPlayerPosition::None || player->mMainPosition == FifamPlayerPosition::GK)
        return FifamPlayerPlayingStyle::None;
    FifamPlayerPlayingStyle result = FifamPlayerPlayingStyle::None;
    Vector<FifamPlayerPlayingStyle> possibleStyles = GetPlayingStylesForPosition(player->mMainPosition);
    float bestLevel = 0.0f;
    for (auto const &style : possibleStyles) {
        float level = player->GetLevel(player->mMainPosition, style);
        if (level > bestLevel) {
            result = style;
            bestLevel = level;
        }
    }
    return result;
}

UChar FifamPlayerLevel::GetPlayerLevel13(FifamPlayer *player, FifamPlayerPosition position, FifamPlayerPlayingStyle style, Bool experience) {
    if (position.ToInt() == 0 || position.ToInt() > 17 || style.ToInt() > 23)
        return 0;
    static UChar gAttrTable[24][14][37] = {
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 3, 0, 1, 11, 4, 0, 2, 0, 0, 0, 2, 4, 4, 2, 2, 0, 0, 0, 11, 11, 11, 11, 11, 5 },
            { 3, 3, 1, 2, 1, 1, 6, 3, 3, 1, 7, 7, 4, 8, 9, 4, 3, 3, 6, 3, 2, 6, 2, 3, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 3, 1, 2, 1, 1, 6, 3, 3, 1, 7, 7, 4, 8, 9, 4, 3, 3, 6, 3, 2, 6, 2, 3, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 1, 1, 2, 1, 1, 1, 3, 3, 3, 8, 8, 8, 6, 5, 2, 8, 8, 2, 2, 1, 8, 2, 5, 3, 3, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 1, 1, 3, 4, 1, 1, 5, 5, 3, 6, 6, 4, 4, 4, 2, 4, 5, 7, 2, 2, 6, 4, 5, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 7, 2, 3, 2, 2, 8, 4, 5, 1, 3, 3, 2, 8, 8, 7, 1, 2, 7, 3, 3, 2, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 7, 2, 3, 2, 2, 8, 4, 5, 1, 3, 3, 2, 8, 8, 7, 1, 2, 7, 3, 3, 2, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 3, 2, 4, 4, 2, 2, 7, 7, 1, 4, 2, 1, 4, 3, 4, 2, 4, 5, 3, 5, 4, 7, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 8, 5, 5, 3, 2, 6, 4, 3, 2, 2, 1, 1, 8, 7, 8, 1, 2, 5, 3, 5, 1, 4, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 8, 5, 5, 3, 2, 6, 4, 3, 2, 2, 1, 1, 8, 7, 8, 1, 2, 5, 3, 5, 1, 4, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 8, 5, 4, 5, 5, 3, 2, 7, 5, 3, 2, 1, 1, 5, 5, 5, 2, 2, 4, 3, 5, 2, 6, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 6, 6, 6, 5, 4, 2, 6, 4, 4, 1, 1, 1, 6, 6, 5, 2, 2, 3, 3, 6, 1, 5, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 4, 8, 7, 4, 6, 1, 3, 2, 7, 1, 1, 1, 6, 6, 5, 5, 4, 2, 2, 8, 1, 2, 2, 4, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 3, 0, 0, 0, 1, 3, 0, 0, 0, 0, 4, 0, 1, 10, 3, 0, 3, 0, 0, 0, 2, 4, 4, 2, 2, 0, 0, 0, 10, 10, 10, 10, 10, 5 },
            { 3, 4, 1, 2, 1, 1, 8, 4, 4, 1, 5, 5, 3, 9, 10, 5, 2, 3, 7, 4, 2, 4, 2, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 4, 1, 2, 1, 1, 8, 4, 4, 1, 5, 5, 3, 9, 10, 5, 2, 3, 7, 4, 2, 4, 2, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 1, 1, 2, 1, 1, 1, 4, 4, 3, 6, 6, 6, 7, 6, 2, 8, 6, 3, 3, 1, 6, 2, 5, 3, 3, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 2, 2, 3, 4, 2, 2, 6, 6, 3, 5, 4, 3, 5, 4, 2, 3, 4, 8, 2, 2, 5, 5, 5, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 8, 2, 3, 3, 2, 10, 4, 5, 1, 2, 2, 1, 8, 8, 7, 1, 1, 8, 3, 3, 1, 4, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 8, 2, 3, 3, 2, 10, 4, 5, 1, 2, 2, 1, 8, 8, 7, 1, 1, 8, 3, 3, 1, 4, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 8, 4, 3, 4, 4, 2, 3, 8, 7, 1, 3, 2, 1, 4, 3, 5, 2, 3, 5, 3, 5, 3, 8, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 10, 5, 5, 3, 2, 7, 4, 3, 1, 1, 1, 1, 8, 7, 8, 1, 1, 5, 3, 5, 1, 4, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 10, 5, 5, 3, 2, 7, 4, 3, 1, 1, 1, 1, 8, 7, 8, 1, 1, 5, 3, 5, 1, 4, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 8, 7, 4, 5, 5, 3, 3, 7, 5, 3, 2, 1, 1, 5, 5, 5, 2, 2, 4, 3, 5, 1, 7, 1, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 8, 7, 6, 5, 4, 2, 6, 4, 3, 1, 1, 1, 6, 6, 5, 2, 2, 3, 3, 6, 1, 5, 1, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 5, 9, 7, 4, 6, 1, 3, 2, 6, 1, 1, 1, 6, 6, 5, 4, 3, 2, 2, 8, 1, 3, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 3, 0, 1, 11, 5, 0, 2, 0, 0, 0, 2, 4, 4, 2, 3, 0, 0, 0, 11, 11, 11, 11, 11, 5 },
            { 2, 2, 1, 2, 1, 1, 4, 3, 3, 1, 9, 9, 6, 8, 9, 4, 3, 4, 5, 3, 1, 8, 1, 3, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 2, 1, 2, 1, 1, 4, 3, 3, 1, 9, 9, 6, 8, 9, 4, 3, 4, 5, 3, 1, 8, 1, 3, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 9, 9, 9, 5, 4, 1, 7, 9, 2, 2, 1, 9, 1, 4, 3, 3, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 1, 1, 3, 3, 1, 1, 4, 4, 3, 8, 7, 6, 4, 4, 2, 4, 6, 6, 2, 2, 8, 3, 5, 2, 2, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 5, 1, 3, 2, 2, 6, 4, 5, 1, 5, 5, 2, 9, 9, 6, 1, 2, 6, 3, 3, 2, 3, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 5, 1, 3, 2, 2, 6, 4, 5, 1, 5, 5, 2, 9, 9, 6, 1, 2, 6, 3, 3, 2, 3, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 2, 2, 4, 4, 2, 2, 7, 6, 2, 5, 3, 2, 4, 3, 4, 2, 5, 4, 3, 4, 6, 6, 2, 2, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 6, 4, 5, 3, 2, 4, 4, 3, 2, 2, 1, 1, 9, 8, 8, 1, 2, 4, 3, 4, 1, 4, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 6, 4, 5, 3, 2, 4, 4, 3, 2, 2, 1, 1, 9, 8, 8, 1, 2, 4, 3, 4, 1, 4, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 4, 3, 5, 4, 3, 2, 7, 5, 3, 3, 1, 1, 6, 6, 5, 2, 3, 3, 3, 5, 2, 5, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 5, 5, 6, 5, 4, 1, 6, 4, 4, 1, 1, 1, 7, 7, 5, 3, 3, 3, 3, 5, 1, 4, 2, 3, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 3, 7, 7, 4, 5, 1, 3, 2, 8, 1, 1, 1, 6, 6, 5, 5, 5, 2, 2, 7, 1, 2, 2, 4, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 2, 4, 0, 0, 0, 0, 2, 0, 1, 10, 4, 0, 2, 0, 0, 0, 2, 4, 5, 2, 2, 0, 0, 0, 10, 10, 10, 10, 10, 5 },
            { 3, 3, 1, 2, 1, 1, 6, 5, 7, 1, 7, 7, 4, 5, 6, 4, 3, 3, 6, 3, 2, 7, 3, 3, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 3, 1, 2, 1, 1, 6, 5, 7, 1, 7, 7, 4, 5, 6, 4, 3, 3, 6, 3, 2, 7, 3, 3, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 1, 1, 2, 1, 1, 1, 5, 6, 3, 8, 8, 8, 4, 3, 2, 8, 8, 2, 2, 1, 9, 3, 5, 3, 4, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 1, 1, 3, 3, 1, 1, 7, 9, 3, 6, 5, 4, 3, 2, 2, 3, 4, 6, 2, 2, 7, 8, 4, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 6, 2, 3, 2, 2, 8, 6, 9, 1, 3, 3, 2, 5, 5, 6, 1, 2, 7, 3, 3, 2, 6, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 6, 2, 3, 2, 2, 8, 6, 9, 1, 3, 3, 2, 5, 5, 6, 1, 2, 7, 3, 3, 2, 6, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 2, 2, 3, 3, 2, 2, 9, 11, 1, 3, 2, 1, 2, 2, 4, 2, 3, 4, 2, 4, 4, 12, 1, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 8, 5, 5, 3, 2, 5, 6, 6, 2, 2, 1, 1, 5, 5, 8, 1, 2, 5, 3, 5, 1, 8, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 8, 5, 5, 3, 2, 5, 6, 6, 2, 2, 1, 1, 5, 5, 8, 1, 2, 5, 3, 5, 1, 8, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 8, 5, 3, 5, 4, 3, 2, 9, 9, 3, 2, 1, 1, 3, 3, 5, 2, 2, 3, 3, 5, 2, 11, 1, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 6, 6, 6, 5, 4, 1, 8, 7, 4, 1, 1, 1, 4, 4, 5, 2, 2, 3, 3, 6, 1, 8, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 4, 8, 7, 4, 5, 1, 5, 3, 7, 1, 1, 1, 4, 4, 5, 5, 4, 2, 2, 8, 1, 5, 2, 4, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 3, 0, 1, 11, 4, 0, 2, 0, 0, 0, 2, 4, 4, 2, 2, 0, 0, 0, 11, 11, 11, 11, 11, 5 },
            { 2, 3, 1, 2, 1, 1, 3, 4, 2, 1, 7, 7, 5, 8, 9, 5, 3, 4, 6, 4, 2, 6, 1, 4, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 3, 1, 2, 1, 1, 3, 4, 2, 1, 7, 7, 5, 8, 9, 5, 3, 4, 6, 4, 2, 6, 1, 4, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 1, 2, 1, 1, 0, 4, 2, 3, 8, 8, 8, 6, 5, 2, 8, 8, 2, 2, 1, 8, 1, 5, 3, 3, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 2, 2, 3, 4, 2, 1, 6, 3, 3, 7, 6, 5, 5, 4, 2, 4, 5, 8, 2, 2, 7, 2, 5, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 7, 2, 4, 3, 2, 5, 5, 3, 1, 4, 4, 2, 9, 9, 7, 1, 2, 8, 4, 4, 2, 2, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 7, 2, 4, 3, 2, 5, 5, 3, 1, 4, 4, 2, 9, 9, 7, 1, 2, 8, 4, 4, 2, 2, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 3, 2, 4, 4, 2, 1, 9, 4, 2, 4, 2, 2, 4, 3, 5, 2, 4, 6, 3, 6, 5, 4, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 9, 5, 5, 4, 3, 3, 5, 2, 2, 2, 1, 1, 9, 8, 9, 1, 2, 5, 4, 5, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 9, 5, 5, 4, 3, 3, 5, 2, 2, 2, 1, 1, 9, 8, 9, 1, 2, 5, 4, 5, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 6, 4, 6, 5, 3, 1, 8, 3, 3, 2, 1, 1, 6, 6, 6, 2, 2, 4, 3, 6, 2, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 7, 7, 7, 6, 4, 1, 7, 2, 4, 1, 1, 1, 7, 7, 6, 2, 2, 3, 3, 7, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 4, 8, 7, 4, 6, 0, 4, 1, 7, 1, 1, 1, 6, 6, 5, 5, 4, 2, 2, 8, 1, 1, 2, 4, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 3, 0, 1, 10, 4, 0, 2, 0, 0, 0, 3, 6, 3, 2, 2, 0, 0, 0, 10, 10, 10, 10, 10, 5 },
            { 2, 2, 1, 2, 1, 1, 6, 3, 3, 1, 9, 9, 6, 8, 8, 4, 2, 3, 6, 3, 2, 5, 2, 4, 3, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 2, 1, 2, 1, 1, 6, 3, 3, 1, 9, 9, 6, 8, 8, 4, 2, 3, 6, 3, 2, 5, 2, 4, 3, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 11, 10, 10, 5, 4, 1, 7, 7, 2, 2, 1, 6, 1, 6, 4, 2, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 1, 1, 3, 3, 1, 1, 5, 5, 3, 9, 7, 6, 4, 3, 2, 3, 4, 7, 2, 2, 5, 4, 6, 3, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 6, 2, 3, 2, 2, 8, 4, 5, 1, 5, 4, 2, 9, 8, 6, 1, 1, 8, 3, 3, 1, 3, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 6, 2, 3, 2, 2, 8, 4, 5, 1, 5, 4, 2, 9, 8, 6, 1, 1, 8, 3, 3, 1, 3, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 3, 2, 4, 4, 2, 2, 7, 6, 1, 5, 3, 2, 4, 3, 4, 2, 3, 5, 3, 5, 4, 7, 2, 3, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 8, 5, 5, 3, 2, 6, 4, 3, 2, 2, 1, 1, 9, 7, 8, 1, 1, 5, 3, 5, 1, 4, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 8, 5, 5, 3, 2, 6, 4, 3, 2, 2, 1, 1, 9, 7, 8, 1, 1, 5, 3, 5, 1, 4, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 5, 4, 5, 4, 3, 2, 7, 5, 3, 3, 1, 1, 6, 5, 5, 2, 2, 4, 3, 5, 1, 6, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 6, 6, 6, 5, 4, 1, 6, 4, 4, 1, 1, 1, 7, 6, 5, 2, 2, 3, 3, 6, 1, 4, 2, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 4, 8, 7, 4, 5, 1, 3, 2, 7, 1, 1, 1, 6, 5, 5, 5, 4, 3, 2, 8, 1, 2, 2, 5, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 3, 0, 1, 10, 5, 0, 2, 0, 0, 0, 5, 4, 3, 2, 2, 0, 0, 0, 10, 10, 10, 10, 10, 5 },
            { 2, 2, 1, 2, 1, 1, 6, 3, 3, 1, 7, 8, 5, 7, 8, 4, 2, 4, 6, 3, 2, 6, 2, 8, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 2, 1, 2, 1, 1, 6, 3, 3, 1, 7, 8, 5, 7, 8, 4, 2, 4, 6, 3, 2, 6, 2, 8, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 8, 9, 8, 5, 4, 1, 7, 9, 2, 2, 1, 7, 1, 11, 3, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 1, 1, 3, 3, 1, 1, 4, 4, 3, 6, 7, 5, 4, 3, 2, 3, 6, 7, 2, 2, 6, 4, 11, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 6, 2, 3, 2, 2, 8, 4, 5, 1, 3, 4, 2, 8, 8, 6, 1, 2, 8, 3, 3, 2, 3, 4, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 6, 2, 3, 2, 2, 8, 4, 5, 1, 3, 4, 2, 8, 8, 6, 1, 2, 8, 3, 3, 2, 3, 4, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 3, 2, 4, 4, 2, 2, 7, 6, 1, 4, 3, 2, 4, 3, 4, 2, 5, 5, 3, 5, 4, 7, 4, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 8, 5, 5, 3, 2, 6, 4, 3, 2, 2, 1, 1, 8, 7, 8, 1, 2, 5, 3, 5, 1, 4, 4, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 8, 5, 5, 3, 2, 6, 4, 3, 2, 2, 1, 1, 8, 7, 8, 1, 2, 5, 3, 5, 1, 4, 4, 2, 1, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 5, 4, 5, 4, 3, 2, 7, 5, 3, 2, 1, 1, 5, 5, 5, 2, 3, 4, 3, 5, 1, 6, 4, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 6, 6, 6, 5, 4, 1, 6, 4, 4, 1, 1, 1, 6, 6, 5, 2, 3, 3, 3, 6, 1, 4, 4, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 4, 8, 7, 4, 5, 1, 3, 2, 7, 1, 1, 1, 5, 5, 5, 5, 5, 3, 2, 8, 1, 2, 4, 4, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 3, 0, 1, 11, 4, 0, 2, 0, 0, 0, 2, 4, 4, 2, 3, 0, 0, 0, 11, 11, 11, 11, 11, 5 },
            { 2, 2, 1, 2, 1, 1, 6, 3, 3, 1, 7, 7, 4, 7, 8, 4, 3, 3, 7, 3, 2, 12, 1, 3, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 2, 1, 2, 1, 1, 6, 3, 3, 1, 7, 7, 4, 7, 8, 4, 3, 3, 7, 3, 2, 12, 1, 3, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 7, 7, 7, 5, 4, 1, 7, 7, 3, 2, 1, 15, 1, 4, 3, 3, 1, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 1, 1, 3, 3, 1, 1, 4, 4, 3, 6, 5, 4, 4, 3, 2, 3, 5, 8, 2, 2, 12, 3, 5, 2, 2, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 5, 2, 3, 3, 2, 8, 4, 5, 1, 3, 3, 2, 8, 8, 6, 1, 2, 9, 3, 3, 3, 3, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 5, 2, 3, 3, 2, 8, 4, 5, 1, 3, 3, 2, 8, 8, 6, 1, 2, 9, 3, 3, 3, 3, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 2, 2, 4, 4, 2, 2, 7, 6, 1, 4, 2, 1, 3, 3, 4, 2, 4, 6, 3, 5, 9, 6, 1, 2, 2, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 7, 5, 5, 3, 3, 6, 4, 3, 2, 2, 1, 1, 8, 7, 8, 1, 2, 6, 3, 5, 2, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 7, 5, 5, 3, 3, 6, 4, 3, 2, 2, 1, 1, 8, 7, 8, 1, 2, 6, 3, 5, 2, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 4, 4, 6, 5, 3, 2, 6, 5, 3, 2, 1, 1, 5, 5, 5, 2, 2, 5, 3, 6, 3, 5, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 5, 6, 6, 6, 4, 2, 6, 4, 4, 1, 1, 1, 6, 6, 5, 2, 2, 4, 3, 6, 2, 4, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 3, 8, 7, 4, 6, 1, 3, 1, 7, 1, 1, 1, 5, 5, 4, 5, 4, 3, 2, 8, 2, 2, 2, 4, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 3, 0, 1, 10, 5, 0, 2, 0, 0, 0, 2, 6, 4, 2, 2, 0, 0, 0, 10, 10, 10, 10, 10, 5 },
            { 2, 2, 1, 2, 1, 1, 6, 3, 3, 1, 8, 8, 5, 8, 8, 4, 2, 3, 7, 3, 2, 7, 2, 4, 4, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 2, 1, 2, 1, 1, 6, 3, 3, 1, 8, 8, 5, 8, 8, 4, 2, 3, 7, 3, 2, 7, 2, 4, 4, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 9, 9, 9, 5, 4, 1, 7, 8, 3, 2, 1, 9, 1, 5, 4, 3, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 1, 1, 3, 3, 1, 1, 5, 5, 3, 8, 6, 5, 4, 3, 2, 3, 5, 8, 2, 2, 7, 4, 6, 3, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 6, 2, 3, 2, 2, 8, 4, 5, 1, 4, 4, 2, 9, 8, 6, 1, 2, 8, 3, 3, 2, 3, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 6, 2, 3, 2, 2, 8, 4, 5, 1, 4, 4, 2, 9, 8, 6, 1, 2, 8, 3, 3, 2, 3, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 3, 2, 4, 4, 2, 2, 7, 6, 1, 5, 3, 2, 4, 3, 4, 2, 4, 6, 3, 5, 5, 7, 2, 3, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 8, 5, 5, 3, 2, 5, 4, 3, 2, 2, 1, 1, 9, 7, 8, 1, 2, 6, 3, 5, 1, 4, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 8, 5, 5, 3, 2, 5, 4, 3, 2, 2, 1, 1, 9, 7, 8, 1, 2, 6, 3, 5, 1, 4, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 5, 4, 5, 4, 3, 2, 7, 5, 3, 3, 1, 1, 6, 5, 5, 2, 2, 4, 3, 5, 2, 6, 2, 2, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 6, 6, 6, 5, 4, 1, 6, 4, 4, 1, 1, 1, 7, 6, 5, 2, 2, 4, 3, 6, 1, 4, 2, 3, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 4, 8, 7, 4, 5, 1, 3, 2, 7, 1, 1, 1, 6, 5, 5, 5, 4, 3, 2, 8, 1, 2, 2, 6, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 4, 0, 1, 11, 4, 0, 2, 0, 0, 0, 2, 4, 4, 2, 2, 0, 0, 0, 11, 11, 11, 11, 11, 5 },
            { 2, 2, 1, 2, 1, 1, 6, 3, 3, 1, 6, 6, 4, 8, 10, 4, 2, 3, 10, 3, 2, 6, 2, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 2, 1, 2, 1, 1, 6, 3, 3, 1, 6, 6, 4, 8, 10, 4, 2, 3, 10, 3, 2, 6, 2, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 1, 1, 2, 1, 1, 1, 3, 3, 3, 8, 8, 8, 6, 6, 2, 8, 8, 4, 2, 1, 8, 2, 5, 3, 3, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 1, 1, 3, 3, 1, 1, 5, 5, 3, 6, 5, 4, 4, 4, 2, 3, 5, 11, 2, 2, 6, 4, 5, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 6, 2, 3, 2, 2, 8, 4, 5, 1, 3, 3, 2, 8, 10, 7, 1, 2, 12, 3, 3, 2, 3, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 6, 2, 3, 2, 2, 8, 4, 5, 1, 3, 3, 2, 8, 10, 7, 1, 2, 12, 3, 3, 2, 3, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 3, 2, 4, 4, 2, 2, 7, 6, 1, 4, 2, 1, 4, 4, 5, 2, 4, 8, 3, 5, 4, 7, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 8, 5, 5, 3, 2, 5, 4, 3, 2, 2, 1, 1, 8, 9, 8, 1, 2, 8, 3, 5, 1, 4, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 8, 5, 5, 3, 2, 5, 4, 3, 2, 2, 1, 1, 8, 9, 8, 1, 2, 8, 3, 5, 1, 4, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 5, 4, 5, 4, 3, 2, 6, 5, 3, 2, 1, 1, 6, 7, 6, 2, 2, 6, 3, 5, 1, 6, 1, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 6, 6, 6, 5, 4, 1, 6, 4, 4, 1, 1, 1, 6, 8, 6, 2, 2, 5, 3, 6, 1, 4, 1, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 4, 8, 7, 4, 5, 1, 3, 2, 7, 1, 1, 1, 6, 7, 5, 5, 4, 4, 2, 8, 1, 2, 2, 4, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 3, 0, 1, 11, 4, 0, 2, 0, 0, 0, 2, 4, 4, 2, 2, 0, 0, 0, 11, 11, 11, 11, 11, 5 },
            { 2, 2, 1, 2, 1, 1, 6, 3, 3, 1, 7, 7, 5, 7, 8, 4, 2, 3, 9, 3, 2, 8, 1, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 2, 1, 2, 1, 1, 6, 3, 3, 1, 7, 7, 5, 7, 8, 4, 2, 3, 9, 3, 2, 8, 1, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 8, 8, 9, 5, 4, 1, 7, 7, 4, 2, 1, 10, 1, 4, 3, 3, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 1, 1, 3, 3, 1, 1, 5, 5, 3, 7, 6, 5, 4, 3, 2, 3, 5, 11, 2, 2, 8, 3, 5, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 6, 2, 3, 2, 2, 8, 4, 5, 1, 3, 3, 2, 8, 8, 6, 1, 2, 11, 3, 3, 2, 3, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 6, 2, 3, 2, 2, 8, 4, 5, 1, 3, 3, 2, 8, 8, 6, 1, 2, 11, 3, 3, 2, 3, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 3, 2, 4, 4, 2, 2, 7, 6, 1, 4, 2, 2, 4, 3, 4, 2, 4, 8, 3, 5, 6, 6, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 8, 5, 5, 3, 2, 6, 4, 3, 2, 2, 1, 1, 8, 7, 8, 1, 2, 8, 3, 5, 1, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 8, 5, 5, 3, 2, 6, 4, 3, 2, 2, 1, 1, 8, 7, 8, 1, 2, 8, 3, 5, 1, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 5, 4, 5, 5, 3, 2, 7, 5, 3, 2, 1, 1, 5, 5, 5, 2, 2, 6, 3, 5, 2, 5, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 6, 6, 6, 5, 4, 2, 6, 4, 4, 1, 1, 1, 6, 6, 5, 2, 2, 5, 3, 6, 1, 4, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 4, 8, 7, 4, 6, 1, 3, 2, 7, 1, 1, 1, 6, 6, 5, 5, 4, 4, 2, 8, 1, 2, 2, 4, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 2, 4, 0, 0, 0, 0, 3, 0, 1, 7, 3, 0, 2, 0, 0, 0, 2, 4, 6, 2, 2, 0, 0, 0, 11, 11, 11, 11, 11, 5 },
            { 4, 2, 1, 2, 1, 1, 6, 7, 7, 1, 6, 5, 3, 6, 6, 4, 2, 3, 5, 3, 2, 6, 4, 3, 3, 4, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 2, 1, 2, 1, 1, 6, 7, 7, 1, 6, 5, 3, 6, 6, 4, 2, 3, 5, 3, 2, 6, 4, 3, 3, 4, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 1, 1, 2, 1, 1, 1, 7, 7, 2, 7, 6, 6, 5, 3, 2, 6, 7, 2, 2, 1, 8, 4, 5, 3, 5, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 1, 1, 3, 3, 1, 1, 9, 9, 2, 5, 4, 3, 3, 2, 2, 2, 4, 6, 2, 2, 6, 9, 5, 2, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 5, 2, 3, 2, 2, 8, 8, 9, 1, 2, 2, 1, 6, 5, 6, 1, 1, 6, 3, 4, 2, 7, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 5, 2, 3, 2, 2, 8, 8, 9, 1, 2, 2, 1, 6, 5, 6, 1, 1, 6, 3, 4, 2, 7, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 10, 2, 2, 3, 3, 2, 2, 12, 11, 1, 2, 1, 1, 2, 2, 4, 1, 2, 4, 2, 5, 4, 13, 1, 2, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 9, 7, 4, 4, 3, 2, 5, 7, 6, 1, 1, 1, 1, 6, 5, 7, 1, 1, 4, 3, 5, 1, 8, 1, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 9, 7, 4, 4, 3, 2, 5, 7, 6, 1, 1, 1, 1, 6, 5, 7, 1, 1, 4, 3, 5, 1, 8, 1, 1, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 10, 4, 3, 4, 4, 3, 2, 11, 9, 2, 2, 0, 0, 4, 3, 4, 1, 2, 3, 3, 5, 1, 11, 1, 1, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 9, 5, 5, 5, 5, 3, 1, 11, 7, 2, 1, 0, 0, 4, 4, 5, 1, 2, 2, 3, 6, 1, 9, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 3, 8, 7, 4, 5, 1, 6, 3, 5, 1, 1, 1, 4, 4, 5, 3, 3, 2, 2, 9, 1, 5, 2, 4, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 6, 0, 2, 6, 2, 0, 4, 0, 0, 0, 2, 4, 4, 2, 2, 0, 0, 0, 11, 11, 11, 11, 11, 6 },
            { 5, 5, 1, 1, 1, 1, 5, 3, 3, 0, 5, 5, 4, 13, 10, 6, 1, 2, 5, 6, 2, 5, 2, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 5, 1, 1, 1, 1, 5, 3, 3, 0, 5, 5, 4, 13, 10, 6, 1, 2, 5, 6, 2, 5, 2, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 2, 1, 1, 1, 1, 1, 3, 3, 2, 7, 7, 8, 10, 6, 2, 4, 4, 2, 5, 1, 8, 2, 5, 3, 3, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 3, 1, 2, 2, 1, 1, 5, 5, 1, 5, 5, 4, 8, 5, 3, 2, 2, 7, 4, 2, 6, 4, 5, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 12, 1, 2, 1, 1, 7, 3, 4, 0, 2, 2, 1, 12, 9, 8, 0, 1, 6, 5, 3, 1, 3, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 12, 1, 2, 1, 1, 7, 3, 4, 0, 2, 2, 1, 12, 9, 8, 0, 1, 6, 5, 3, 1, 3, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 13, 6, 2, 2, 2, 2, 2, 7, 6, 1, 3, 2, 1, 6, 3, 6, 1, 2, 5, 5, 5, 4, 7, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 10, 14, 3, 3, 2, 2, 5, 3, 3, 1, 1, 1, 1, 12, 8, 10, 0, 1, 4, 5, 4, 1, 3, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 10, 14, 3, 3, 2, 2, 5, 3, 3, 1, 1, 1, 1, 12, 8, 10, 0, 1, 4, 5, 4, 1, 3, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 13, 10, 3, 3, 3, 2, 2, 6, 5, 1, 2, 1, 1, 8, 6, 7, 1, 1, 3, 5, 5, 1, 5, 1, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 11, 12, 4, 4, 3, 3, 1, 5, 3, 2, 1, 1, 1, 10, 7, 7, 1, 1, 3, 5, 5, 1, 4, 1, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 8, 8, 6, 5, 3, 5, 1, 3, 2, 3, 1, 1, 1, 10, 7, 7, 2, 2, 2, 5, 8, 1, 2, 2, 4, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 4, 0, 1, 11, 4, 0, 2, 0, 0, 0, 2, 4, 4, 2, 2, 0, 0, 0, 11, 11, 11, 11, 11, 5 },
            { 2, 2, 1, 2, 1, 1, 11, 3, 3, 1, 6, 6, 4, 10, 12, 4, 2, 3, 5, 3, 1, 5, 1, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 2, 1, 2, 1, 1, 11, 3, 3, 1, 6, 6, 4, 10, 12, 4, 2, 3, 5, 3, 1, 5, 1, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 1, 2, 1, 1, 2, 2, 3, 3, 8, 8, 8, 8, 7, 2, 8, 8, 2, 2, 1, 8, 1, 5, 3, 3, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 1, 1, 3, 3, 1, 3, 4, 5, 3, 6, 6, 4, 6, 5, 2, 4, 5, 7, 2, 2, 6, 3, 5, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 6, 1, 3, 2, 1, 15, 3, 4, 1, 3, 3, 1, 10, 11, 6, 1, 1, 7, 3, 2, 1, 2, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 6, 1, 3, 2, 1, 15, 3, 4, 1, 3, 3, 1, 10, 11, 6, 1, 1, 7, 3, 2, 1, 2, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 3, 2, 4, 3, 2, 5, 6, 7, 2, 4, 2, 2, 5, 5, 5, 2, 4, 5, 3, 4, 5, 5, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 8, 4, 5, 2, 2, 11, 3, 3, 2, 2, 1, 1, 11, 10, 8, 1, 2, 5, 3, 4, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 8, 4, 5, 2, 2, 11, 3, 3, 2, 2, 1, 1, 11, 10, 8, 1, 2, 5, 3, 4, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 5, 3, 5, 4, 3, 5, 5, 5, 3, 2, 1, 1, 7, 8, 5, 2, 2, 4, 3, 4, 2, 4, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 6, 5, 6, 4, 4, 3, 5, 4, 4, 1, 1, 1, 9, 9, 5, 2, 2, 3, 3, 5, 1, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 4, 6, 7, 3, 6, 2, 3, 2, 7, 1, 1, 1, 8, 8, 5, 5, 4, 2, 2, 6, 1, 1, 2, 4, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 2, 0, 1, 17, 7, 0, 2, 0, 0, 0, 2, 4, 5, 2, 2, 0, 0, 0, 10, 10, 10, 10, 10, 5 },
            { 2, 1, 1, 2, 1, 1, 5, 3, 3, 2, 8, 8, 5, 5, 6, 3, 5, 7, 4, 3, 3, 7, 1, 4, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 1, 1, 2, 1, 1, 5, 3, 3, 2, 8, 8, 5, 5, 6, 3, 5, 7, 4, 3, 3, 7, 1, 4, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 0, 1, 1, 1, 1, 1, 2, 2, 5, 7, 7, 7, 3, 3, 1, 13, 13, 1, 2, 1, 7, 1, 4, 3, 4, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 1, 2, 3, 4, 1, 1, 4, 4, 5, 7, 6, 4, 3, 2, 1, 7, 9, 4, 2, 3, 7, 3, 5, 2, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 4, 3, 4, 3, 2, 7, 4, 5, 2, 4, 4, 2, 6, 6, 5, 2, 4, 5, 3, 6, 2, 3, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 4, 3, 4, 3, 2, 7, 4, 5, 2, 4, 4, 2, 6, 6, 5, 2, 4, 5, 3, 6, 2, 3, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 2, 3, 4, 4, 2, 2, 6, 6, 3, 4, 2, 2, 2, 2, 3, 4, 7, 3, 3, 8, 5, 6, 2, 2, 3, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 5, 8, 6, 4, 3, 5, 4, 3, 3, 2, 1, 1, 6, 5, 6, 2, 3, 3, 3, 8, 1, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 5, 8, 6, 4, 3, 5, 4, 3, 3, 2, 1, 1, 6, 5, 6, 2, 3, 3, 3, 8, 1, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 3, 5, 6, 5, 3, 2, 6, 5, 6, 2, 1, 1, 3, 3, 3, 4, 4, 2, 3, 8, 2, 5, 2, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 3, 9, 7, 6, 4, 1, 5, 3, 7, 1, 1, 1, 4, 4, 3, 4, 4, 2, 3, 9, 1, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 2, 10, 7, 4, 5, 1, 2, 1, 12, 1, 1, 1, 3, 3, 3, 8, 7, 1, 2, 11, 1, 2, 2, 4, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 3, 0, 1, 10, 4, 0, 3, 0, 0, 0, 2, 7, 6, 2, 2, 0, 0, 0, 10, 10, 10, 10, 10, 5 },
            { 2, 2, 2, 2, 1, 1, 6, 3, 3, 1, 7, 7, 4, 7, 8, 4, 2, 3, 6, 4, 3, 6, 2, 3, 4, 4, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 2, 2, 2, 1, 1, 6, 3, 3, 1, 7, 7, 4, 7, 8, 4, 2, 3, 6, 4, 3, 6, 2, 3, 4, 4, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 1, 1, 1, 1, 1, 3, 3, 4, 7, 7, 7, 5, 4, 1, 7, 7, 2, 3, 1, 7, 1, 4, 5, 4, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 1, 3, 3, 3, 1, 1, 4, 4, 3, 6, 5, 4, 4, 3, 2, 3, 5, 7, 3, 4, 6, 4, 5, 4, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 6, 3, 3, 2, 2, 8, 3, 4, 1, 3, 3, 2, 8, 8, 6, 1, 2, 7, 4, 6, 2, 3, 2, 3, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 6, 3, 3, 2, 2, 8, 3, 4, 1, 3, 3, 2, 8, 8, 6, 1, 2, 7, 4, 6, 2, 3, 2, 3, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 3, 4, 3, 3, 2, 2, 6, 5, 2, 3, 2, 1, 3, 3, 4, 2, 3, 5, 3, 9, 4, 7, 1, 4, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 7, 9, 4, 3, 2, 5, 3, 3, 2, 1, 1, 1, 7, 7, 7, 1, 1, 4, 4, 9, 1, 4, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 7, 9, 4, 3, 2, 5, 3, 3, 2, 1, 1, 1, 7, 7, 7, 1, 1, 4, 4, 9, 1, 4, 1, 3, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 5, 7, 5, 4, 3, 2, 5, 4, 3, 2, 1, 1, 5, 5, 5, 2, 2, 3, 4, 9, 1, 5, 1, 2, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 5, 11, 5, 5, 3, 1, 5, 3, 4, 1, 1, 1, 5, 5, 5, 2, 2, 3, 3, 11, 1, 4, 1, 4, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 3, 13, 6, 3, 5, 1, 2, 1, 7, 1, 1, 1, 5, 5, 4, 4, 3, 2, 3, 13, 1, 2, 1, 6, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 6, 0, 1, 10, 4, 0, 2, 0, 0, 0, 2, 4, 4, 2, 2, 0, 0, 0, 10, 10, 10, 10, 10, 5 },
            { 2, 2, 1, 2, 1, 1, 5, 3, 3, 1, 5, 5, 4, 14, 15, 4, 2, 3, 7, 3, 2, 5, 2, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 2, 1, 2, 1, 1, 5, 3, 3, 1, 5, 5, 4, 14, 15, 4, 2, 3, 7, 3, 2, 5, 2, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 6, 6, 7, 10, 9, 1, 7, 7, 3, 2, 1, 7, 1, 4, 3, 3, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 1, 1, 3, 3, 1, 1, 5, 5, 3, 5, 4, 4, 8, 7, 2, 3, 5, 9, 2, 2, 6, 4, 5, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 6, 1, 3, 2, 1, 7, 4, 4, 1, 2, 2, 1, 14, 14, 6, 1, 1, 8, 3, 3, 1, 3, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 6, 1, 3, 2, 1, 7, 4, 4, 1, 2, 2, 1, 14, 14, 6, 1, 1, 8, 3, 3, 1, 3, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 3, 2, 3, 3, 2, 2, 7, 6, 1, 3, 2, 1, 7, 6, 4, 2, 3, 6, 3, 5, 4, 7, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 7, 4, 4, 3, 2, 5, 3, 3, 1, 1, 1, 1, 14, 13, 7, 1, 1, 5, 3, 4, 1, 3, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 7, 4, 4, 3, 2, 5, 3, 3, 1, 1, 1, 1, 14, 13, 7, 1, 1, 5, 3, 4, 1, 3, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 5, 3, 5, 4, 3, 2, 6, 5, 3, 2, 1, 1, 10, 10, 5, 2, 2, 4, 3, 5, 1, 5, 1, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 5, 5, 5, 5, 3, 1, 5, 3, 3, 1, 1, 1, 11, 11, 5, 2, 2, 4, 3, 5, 1, 4, 1, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 4, 7, 6, 4, 5, 1, 3, 1, 6, 1, 1, 1, 10, 10, 4, 4, 4, 3, 2, 7, 1, 2, 1, 4, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 5, 0, 1, 9, 4, 0, 2, 0, 0, 0, 2, 4, 4, 2, 2, 0, 0, 0, 11, 11, 11, 11, 11, 5 },
            { 2, 3, 0, 1, 1, 1, 11, 2, 3, 1, 6, 6, 4, 10, 12, 4, 2, 3, 7, 3, 1, 5, 1, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 3, 0, 1, 1, 1, 11, 2, 3, 1, 6, 6, 4, 10, 12, 4, 2, 3, 7, 3, 1, 5, 1, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 0, 1, 1, 1, 2, 2, 3, 2, 8, 8, 8, 8, 7, 2, 6, 8, 3, 2, 1, 8, 1, 5, 3, 3, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 2, 1, 3, 3, 1, 3, 4, 5, 2, 6, 6, 4, 6, 6, 2, 3, 5, 9, 2, 2, 6, 2, 5, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 6, 1, 3, 2, 1, 15, 3, 4, 1, 3, 3, 1, 11, 12, 6, 1, 1, 9, 3, 2, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 6, 1, 3, 2, 1, 15, 3, 4, 1, 3, 3, 1, 11, 12, 6, 1, 1, 9, 3, 2, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 3, 1, 3, 3, 2, 5, 6, 7, 1, 4, 2, 2, 6, 5, 5, 2, 4, 7, 3, 4, 5, 4, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 8, 2, 4, 2, 2, 11, 3, 3, 1, 2, 1, 1, 11, 11, 8, 1, 2, 6, 3, 4, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 8, 2, 4, 2, 2, 11, 3, 3, 1, 2, 1, 1, 11, 11, 8, 1, 2, 6, 3, 4, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 6, 2, 5, 3, 2, 5, 6, 5, 2, 2, 1, 1, 8, 9, 5, 2, 2, 5, 3, 4, 2, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 7, 3, 6, 4, 3, 3, 5, 4, 3, 1, 1, 1, 10, 10, 6, 2, 2, 4, 3, 5, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 5, 4, 7, 3, 5, 2, 3, 2, 5, 1, 1, 1, 9, 10, 5, 4, 4, 3, 3, 7, 1, 1, 2, 4, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 5, 0, 1, 9, 4, 0, 2, 0, 0, 0, 2, 4, 4, 2, 2, 0, 0, 0, 11, 11, 11, 11, 11, 5 },
            { 2, 3, 0, 1, 1, 1, 11, 2, 3, 1, 6, 6, 4, 10, 12, 4, 2, 3, 7, 3, 1, 5, 1, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 3, 0, 1, 1, 1, 11, 2, 3, 1, 6, 6, 4, 10, 12, 4, 2, 3, 7, 3, 1, 5, 1, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 0, 1, 1, 1, 2, 2, 3, 2, 8, 8, 8, 8, 7, 2, 6, 8, 3, 2, 1, 8, 1, 5, 3, 3, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 2, 1, 3, 3, 1, 3, 4, 5, 2, 6, 6, 4, 6, 6, 2, 3, 5, 9, 2, 2, 6, 2, 5, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 6, 1, 3, 2, 1, 15, 3, 4, 1, 3, 3, 1, 11, 12, 6, 1, 1, 9, 3, 2, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 6, 1, 3, 2, 1, 15, 3, 4, 1, 3, 3, 1, 11, 12, 6, 1, 1, 9, 3, 2, 1, 1, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 3, 1, 3, 3, 2, 5, 6, 7, 1, 4, 2, 2, 6, 5, 5, 2, 4, 7, 3, 4, 5, 4, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 8, 2, 4, 2, 2, 11, 3, 3, 1, 2, 1, 1, 11, 11, 8, 1, 2, 6, 3, 4, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 8, 2, 4, 2, 2, 11, 3, 3, 1, 2, 1, 1, 11, 11, 8, 1, 2, 6, 3, 4, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 6, 2, 5, 3, 2, 5, 6, 5, 2, 2, 1, 1, 8, 9, 5, 2, 2, 5, 3, 4, 2, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 7, 3, 6, 4, 3, 3, 5, 4, 3, 1, 1, 1, 10, 10, 6, 2, 2, 4, 3, 5, 1, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 5, 4, 7, 3, 5, 2, 3, 2, 5, 1, 1, 1, 9, 10, 5, 4, 4, 3, 3, 7, 1, 1, 2, 4, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 1, 0, 0, 0, 1, 2, 0, 0, 0, 0, 6, 0, 2, 6, 2, 0, 4, 0, 0, 0, 2, 4, 4, 2, 2, 0, 0, 0, 11, 11, 11, 11, 11, 6 },
            { 5, 5, 1, 1, 0, 1, 5, 3, 3, 0, 5, 5, 4, 13, 10, 6, 1, 2, 5, 6, 2, 5, 2, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 5, 1, 1, 0, 1, 5, 3, 3, 0, 5, 5, 4, 13, 10, 6, 1, 2, 5, 6, 2, 5, 2, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 2, 1, 1, 0, 1, 1, 3, 3, 2, 7, 7, 8, 10, 6, 2, 4, 4, 2, 5, 1, 8, 2, 5, 3, 3, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 3, 1, 2, 2, 1, 1, 5, 5, 1, 5, 5, 4, 8, 5, 3, 2, 2, 7, 4, 2, 6, 4, 5, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 12, 1, 2, 1, 1, 7, 3, 4, 0, 2, 2, 1, 12, 9, 8, 0, 1, 6, 5, 3, 1, 3, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 12, 1, 2, 1, 1, 7, 3, 4, 0, 2, 2, 1, 12, 9, 8, 0, 1, 6, 5, 3, 1, 3, 1, 1, 1, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 13, 6, 2, 2, 2, 2, 2, 7, 6, 1, 3, 2, 1, 6, 3, 6, 1, 2, 5, 5, 5, 4, 7, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 10, 14, 3, 2, 1, 2, 5, 3, 3, 1, 1, 1, 1, 12, 8, 10, 0, 1, 4, 5, 4, 1, 3, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 10, 14, 3, 2, 1, 2, 5, 3, 3, 1, 1, 1, 1, 12, 8, 10, 0, 1, 4, 5, 4, 1, 3, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 13, 10, 3, 3, 2, 2, 2, 6, 5, 1, 2, 1, 1, 8, 6, 7, 1, 1, 3, 5, 5, 1, 5, 1, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 11, 12, 4, 3, 2, 3, 1, 5, 3, 2, 1, 1, 1, 10, 7, 7, 1, 1, 3, 5, 5, 1, 4, 1, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 8, 8, 6, 4, 2, 5, 1, 3, 2, 3, 1, 1, 1, 10, 7, 7, 2, 2, 2, 5, 8, 1, 2, 2, 4, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 3, 0, 1, 10, 6, 0, 4, 0, 0, 0, 2, 4, 6, 2, 2, 0, 0, 0, 10, 10, 10, 10, 10, 5 },
            { 3, 2, 1, 2, 1, 1, 6, 4, 3, 1, 6, 6, 4, 7, 8, 4, 2, 5, 6, 6, 2, 6, 2, 3, 2, 4, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 2, 1, 2, 1, 1, 6, 4, 3, 1, 6, 6, 4, 7, 8, 4, 2, 5, 6, 6, 2, 6, 2, 3, 2, 4, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 1, 1, 1, 1, 1, 1, 3, 3, 3, 7, 7, 7, 5, 4, 1, 7, 11, 2, 4, 1, 7, 2, 4, 3, 4, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 1, 1, 3, 3, 1, 1, 6, 5, 3, 6, 5, 4, 4, 3, 2, 3, 7, 7, 4, 2, 6, 5, 5, 2, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 6, 2, 3, 2, 2, 8, 5, 5, 1, 3, 3, 2, 8, 8, 6, 1, 2, 7, 6, 3, 2, 4, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 6, 2, 3, 2, 2, 8, 5, 5, 1, 3, 3, 2, 8, 8, 6, 1, 2, 7, 6, 3, 2, 4, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 8, 3, 2, 3, 3, 2, 2, 8, 6, 1, 3, 2, 1, 3, 3, 4, 2, 5, 5, 5, 5, 4, 9, 1, 2, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 8, 5, 5, 3, 2, 5, 5, 3, 2, 2, 1, 1, 8, 7, 8, 1, 2, 5, 6, 5, 1, 5, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 8, 5, 5, 3, 2, 5, 5, 3, 2, 2, 1, 1, 8, 7, 8, 1, 2, 5, 6, 5, 1, 5, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 8, 5, 3, 5, 4, 3, 2, 7, 5, 3, 2, 1, 1, 5, 5, 5, 2, 3, 3, 6, 5, 1, 7, 1, 1, 3, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 7, 6, 6, 6, 5, 4, 1, 7, 4, 4, 1, 1, 1, 6, 6, 5, 2, 3, 3, 6, 6, 1, 6, 1, 2, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 4, 7, 7, 4, 5, 1, 4, 1, 7, 1, 1, 1, 5, 5, 4, 4, 6, 2, 4, 7, 1, 3, 1, 4, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 3, 0, 1, 11, 4, 0, 2, 0, 0, 0, 2, 4, 4, 2, 2, 0, 0, 0, 11, 11, 11, 11, 11, 5 },
            { 2, 2, 1, 2, 1, 1, 6, 3, 3, 1, 7, 7, 5, 7, 8, 4, 2, 3, 9, 3, 2, 8, 1, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 2, 1, 2, 1, 1, 6, 3, 3, 1, 7, 7, 5, 7, 8, 4, 2, 3, 9, 3, 2, 8, 1, 3, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 8, 8, 9, 5, 4, 1, 7, 7, 4, 2, 1, 10, 1, 4, 3, 3, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 1, 1, 3, 3, 1, 1, 5, 5, 3, 7, 6, 5, 4, 3, 2, 3, 5, 11, 2, 2, 8, 3, 5, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 6, 2, 3, 2, 2, 8, 4, 5, 1, 3, 3, 2, 8, 8, 6, 1, 2, 11, 3, 3, 2, 3, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 6, 2, 3, 2, 2, 8, 4, 5, 1, 3, 3, 2, 8, 8, 6, 1, 2, 11, 3, 3, 2, 3, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 3, 2, 4, 4, 2, 2, 7, 6, 1, 4, 2, 2, 4, 3, 4, 2, 4, 8, 3, 5, 6, 6, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 8, 5, 5, 3, 2, 6, 4, 3, 2, 2, 1, 1, 8, 7, 8, 1, 2, 8, 3, 5, 1, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 8, 5, 5, 3, 2, 6, 4, 3, 2, 2, 1, 1, 8, 7, 8, 1, 2, 8, 3, 5, 1, 3, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 5, 4, 5, 5, 3, 2, 7, 5, 3, 2, 1, 1, 5, 5, 5, 2, 2, 6, 3, 5, 2, 5, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 6, 6, 6, 5, 4, 2, 6, 4, 4, 1, 1, 1, 6, 6, 5, 2, 2, 5, 3, 6, 1, 4, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 4, 8, 7, 4, 6, 1, 3, 2, 7, 1, 1, 1, 6, 6, 5, 5, 4, 4, 2, 8, 1, 2, 2, 4, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 2, 0, 0, 0, 1, 2, 0, 0, 0, 0, 2, 0, 1, 15, 8, 0, 2, 0, 0, 0, 2, 4, 5, 2, 2, 0, 0, 0, 10, 10, 10, 10, 10, 5 },
            { 2, 3, 1, 2, 1, 1, 6, 2, 4, 1, 7, 7, 4, 6, 6, 3, 4, 7, 6, 4, 2, 7, 2, 4, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 3, 1, 2, 1, 1, 6, 2, 4, 1, 7, 7, 4, 6, 6, 3, 4, 7, 6, 4, 2, 7, 2, 4, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 1, 1, 1, 1, 1, 2, 3, 4, 7, 7, 7, 4, 3, 1, 11, 15, 2, 2, 1, 8, 1, 4, 3, 4, 1, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 1, 1, 3, 4, 1, 1, 3, 5, 3, 6, 6, 4, 3, 2, 1, 5, 10, 7, 2, 2, 7, 4, 5, 2, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 7, 2, 4, 3, 2, 9, 3, 5, 1, 4, 4, 2, 6, 6, 4, 1, 4, 8, 4, 4, 2, 4, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 7, 2, 4, 3, 2, 9, 3, 5, 1, 4, 4, 2, 6, 6, 4, 1, 4, 8, 4, 4, 2, 4, 2, 2, 2, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 3, 2, 4, 4, 2, 2, 5, 7, 2, 4, 2, 2, 3, 2, 3, 3, 8, 5, 3, 5, 5, 8, 2, 2, 3, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 9, 5, 5, 4, 3, 6, 3, 4, 2, 2, 1, 1, 6, 6, 5, 1, 4, 5, 4, 5, 1, 4, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 9, 5, 5, 4, 3, 6, 3, 4, 2, 2, 1, 1, 6, 6, 5, 1, 4, 5, 4, 5, 1, 4, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 6, 4, 6, 5, 3, 2, 5, 6, 4, 2, 1, 1, 4, 4, 3, 4, 5, 4, 3, 6, 2, 6, 2, 2, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 6, 6, 6, 6, 4, 2, 5, 4, 5, 1, 1, 1, 5, 5, 3, 4, 5, 3, 3, 6, 1, 5, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 4, 8, 7, 4, 6, 1, 2, 2, 9, 1, 1, 1, 4, 4, 3, 7, 8, 2, 2, 8, 1, 2, 2, 4, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        },
        {
            { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100 },
            { 0, 0, 0, 4, 0, 0, 0, 1, 2, 0, 0, 0, 0, 3, 0, 1, 11, 4, 0, 2, 0, 0, 0, 2, 4, 4, 2, 2, 0, 0, 0, 11, 11, 11, 11, 11, 5 },
            { 2, 2, 1, 3, 2, 2, 6, 3, 3, 1, 7, 7, 4, 8, 9, 4, 3, 3, 6, 3, 2, 6, 2, 3, 3, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 2, 2, 1, 3, 2, 2, 6, 3, 3, 1, 7, 7, 4, 8, 9, 4, 3, 3, 6, 3, 2, 6, 2, 3, 3, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 1, 1, 1, 3, 2, 1, 1, 3, 3, 3, 8, 8, 8, 6, 5, 2, 8, 8, 2, 2, 1, 8, 2, 5, 3, 3, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 1, 1, 5, 7, 2, 1, 4, 4, 3, 6, 6, 4, 4, 3, 2, 3, 5, 7, 2, 2, 6, 4, 5, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 5, 2, 5, 5, 3, 8, 4, 4, 1, 3, 3, 2, 8, 8, 6, 1, 2, 7, 3, 3, 2, 3, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 4, 5, 2, 5, 5, 3, 8, 4, 4, 1, 3, 3, 2, 8, 8, 6, 1, 2, 7, 3, 3, 2, 3, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 2, 2, 6, 7, 4, 2, 6, 5, 1, 4, 2, 1, 4, 3, 4, 2, 4, 5, 3, 5, 4, 7, 1, 2, 2, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 6, 5, 8, 6, 4, 5, 3, 2, 2, 2, 1, 1, 8, 7, 8, 1, 2, 5, 3, 5, 1, 4, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 6, 5, 8, 6, 4, 5, 3, 2, 2, 2, 1, 1, 8, 7, 8, 1, 2, 5, 3, 5, 1, 4, 2, 2, 1, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 6, 4, 4, 8, 9, 5, 2, 6, 4, 3, 2, 1, 1, 5, 5, 5, 2, 2, 4, 3, 5, 1, 6, 1, 1, 2, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 5, 5, 6, 10, 10, 6, 1, 5, 3, 4, 1, 1, 1, 6, 6, 5, 2, 2, 3, 3, 6, 1, 4, 1, 2, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
            { 3, 3, 7, 11, 7, 9, 1, 3, 1, 6, 1, 1, 1, 5, 5, 4, 4, 4, 2, 2, 7, 1, 2, 1, 4, 2, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0 }
        }
    };
    UChar attributes[37] = {
        player->mAttributes.BallControl,
        player->mAttributes.Dribbling,
        player->mAttributes.Finishing,
        player->mAttributes.ShotPower,
        player->mAttributes.LongShots,
        player->mAttributes.Volleys,
        player->mAttributes.Crossing,
        player->mAttributes.Passing,
        player->mAttributes.LongPassing,
        player->mAttributes.Header,
        player->mAttributes.TackleStanding,
        player->mAttributes.TackleSliding,
        player->mAttributes.ManMarking,
        player->mAttributes.Acceleration,
        player->mAttributes.Pace,
        player->mAttributes.Agility,
        player->mAttributes.Jumping,
        player->mAttributes.Strength,
        player->mAttributes.Stamina,
        player->mAttributes.Balance,
        player->mAttributes.PosOffensive,
        player->mAttributes.PosDefensive,
        player->mAttributes.Vision,
        player->mAttributes.Aggression,
        player->mAttributes.Reactions,
        player->mAttributes.Composure,
        player->mAttributes.Consistency,
        player->mAttributes.TacticAwareness,
        player->mAttributes.FreeKicks,
        player->mAttributes.Corners,
        player->mAttributes.PenaltyShot,
        player->mAttributes.Diving,
        player->mAttributes.Handling,
        player->mAttributes.Positioning,
        player->mAttributes.OneOnOne,
        player->mAttributes.Reflexes,
        player->mAttributes.Kicking
    };
    static Vector<Pair<UChar, UChar>> posn13table = {
        { 0,  FifamPlayerPosition::None },
        { 1,  FifamPlayerPosition::GK },
        { 2,  FifamPlayerPosition::RB },
        { 3,  FifamPlayerPosition::LB },
        { 4,  FifamPlayerPosition::CB },
        { 4,  FifamPlayerPosition::SW },
        { 2,  FifamPlayerPosition::RWB },
        { 3,  FifamPlayerPosition::LWB },
        { 4,  FifamPlayerPosition::ANC },
        { 5,  FifamPlayerPosition::DM },
        { 6,  FifamPlayerPosition::RM },
        { 7,  FifamPlayerPosition::LM },
        { 8,  FifamPlayerPosition::CM },
        { 9,  FifamPlayerPosition::RW },
        { 10, FifamPlayerPosition::LW },
        { 11, FifamPlayerPosition::AM },
        { 12, FifamPlayerPosition::CF },
        { 13, FifamPlayerPosition::ST }
    };
    UChar posIndex = position.TranslateTo<UChar>(posn13table, 0);
    UInt total = 0;
    Int intLevel = 0;
    for (UInt i = 0; i < 37; i++) {
        UChar value = gAttrTable[style.ToInt()][posIndex][i];
        intLevel += attributes[i] * value;
        total += value;
    }
    intLevel /= total;
    ValidatePlayerLevel(intLevel);
    Int finalLevel = intLevel * (UInt)(player->mPositionBias[position.ToInt()]) / 100;
    if (experience)
        finalLevel += GetPlayerExperienceLevelModifier(player);
    ValidatePlayerLevel(finalLevel);
    return (UChar)finalLevel;
}

UChar FifamPlayerLevel::GetPlayerLevel12(FifamPlayer *player, FifamPlayerPosition position, FifamPlayerPlayingStyle style, Bool experience) {
    if (position == FifamPlayerPosition::None || position.ToInt() > 17)
        return 0;
    static Float gLevelCalcTable[18][44] = {
        { 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.25f, 0.25f  },
        { 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.25f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.25f, 0.00f, 0.00f, 0.25f, 0.25f, 0.50f, 0.00f, 0.00f, 0.00f, 0.25f, 0.25f, 0.25f, 0.25f, 0.00f, 0.75f, 0.25f, 0.25f, 1.00f, 1.00f, 0.50f, 1.00f, 1.00f, 0.75f, 1.00f, 0.50f, 10.75f },
        { 0.25f, 0.25f, 0.50f, 0.50f, 0.75f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.50f, 0.50f, 0.25f, 1.00f, 0.75f, 0.50f, 0.75f, 0.75f, 1.00f, 1.00f, 0.75f, 0.50f, 0.50f, 0.50f, 0.50f, 0.25f, 0.25f, 0.25f, 0.50f, 0.25f, 0.50f, 0.25f, 0.50f, 0.25f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 15.50f },
        { 0.25f, 0.25f, 0.50f, 0.50f, 0.75f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.50f, 0.50f, 0.25f, 1.00f, 0.75f, 0.50f, 0.75f, 0.75f, 1.00f, 1.00f, 0.75f, 0.50f, 0.50f, 0.50f, 0.50f, 0.25f, 0.25f, 0.25f, 0.50f, 0.25f, 0.50f, 0.25f, 0.50f, 0.25f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 15.50f },
        { 0.25f, 0.25f, 0.25f, 0.25f, 0.00f, 0.00f, 0.25f, 0.00f, 0.00f, 0.00f, 0.50f, 0.50f, 0.00f, 1.00f, 1.00f, 1.00f, 0.50f, 0.25f, 1.00f, 1.00f, 0.25f, 1.00f, 0.25f, 1.00f, 0.25f, 1.00f, 0.50f, 0.50f, 0.75f, 0.25f, 0.50f, 0.25f, 0.50f, 0.50f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 15.75f },
        { 0.25f, 0.25f, 0.25f, 0.50f, 0.00f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.50f, 0.75f, 0.00f, 1.00f, 1.00f, 1.00f, 0.50f, 0.50f, 1.00f, 1.00f, 0.50f, 0.75f, 0.25f, 1.00f, 0.50f, 1.00f, 0.25f, 0.50f, 0.50f, 0.25f, 0.50f, 0.25f, 0.50f, 0.25f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 16.00f },
        { 0.25f, 0.25f, 0.50f, 0.50f, 0.75f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.50f, 0.50f, 0.25f, 1.00f, 0.75f, 0.50f, 0.75f, 0.75f, 1.00f, 1.00f, 0.75f, 0.50f, 0.50f, 0.50f, 0.50f, 0.25f, 0.25f, 0.25f, 0.50f, 0.25f, 0.50f, 0.25f, 0.50f, 0.25f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 15.50f },
        { 0.25f, 0.25f, 0.50f, 0.50f, 0.75f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.50f, 0.50f, 0.25f, 1.00f, 0.75f, 0.50f, 0.75f, 0.75f, 1.00f, 1.00f, 0.75f, 0.50f, 0.50f, 0.50f, 0.50f, 0.25f, 0.25f, 0.25f, 0.50f, 0.25f, 0.50f, 0.25f, 0.50f, 0.25f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 15.50f },
        { 0.25f, 0.25f, 0.25f, 0.25f, 0.00f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 1.00f, 1.00f, 0.50f, 1.00f, 1.00f, 0.75f, 0.50f, 0.25f, 1.00f, 1.00f, 0.50f, 0.50f, 0.25f, 0.75f, 0.50f, 1.00f, 0.50f, 1.00f, 0.50f, 0.25f, 0.50f, 0.50f, 0.50f, 0.25f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 17.00f },
        { 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.50f, 0.25f, 0.00f, 0.00f, 0.00f, 1.00f, 1.00f, 0.25f, 1.00f, 1.00f, 0.75f, 0.75f, 0.25f, 1.00f, 1.00f, 1.00f, 0.75f, 0.25f, 0.75f, 0.50f, 1.00f, 0.75f, 0.50f, 0.50f, 0.50f, 0.50f, 0.75f, 0.50f, 0.50f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 19.00f },
        { 0.50f, 0.50f, 1.00f, 1.00f, 1.00f, 0.50f, 0.50f, 0.00f, 0.00f, 0.00f, 0.75f, 0.75f, 0.50f, 0.50f, 0.25f, 0.25f, 1.00f, 0.75f, 1.00f, 1.00f, 0.75f, 0.50f, 0.50f, 0.25f, 0.50f, 0.50f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.50f, 0.50f, 0.50f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 17.75f },
        { 0.50f, 0.50f, 1.00f, 1.00f, 1.00f, 0.50f, 0.50f, 0.00f, 0.00f, 0.00f, 0.75f, 0.75f, 0.50f, 0.50f, 0.25f, 0.25f, 1.00f, 0.75f, 1.00f, 1.00f, 0.75f, 0.50f, 0.50f, 0.25f, 0.50f, 0.50f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.50f, 0.50f, 0.50f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 17.75f },
        { 0.50f, 0.50f, 0.75f, 1.00f, 0.50f, 1.00f, 0.50f, 0.00f, 0.00f, 0.00f, 1.00f, 1.00f, 0.75f, 0.50f, 0.00f, 0.50f, 1.00f, 0.75f, 1.00f, 1.00f, 0.75f, 0.50f, 0.50f, 0.50f, 0.50f, 0.75f, 0.50f, 0.50f, 0.50f, 0.50f, 0.25f, 0.75f, 0.50f, 0.50f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 20.00f },
        { 0.50f, 0.50f, 1.00f, 1.00f, 1.00f, 0.50f, 0.75f, 0.00f, 0.00f, 0.00f, 0.75f, 0.50f, 0.75f, 0.25f, 0.00f, 0.25f, 1.00f, 1.00f, 1.00f, 1.00f, 0.50f, 0.25f, 0.75f, 0.25f, 0.50f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.50f, 0.25f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 16.75f },
        { 0.50f, 0.50f, 1.00f, 1.00f, 1.00f, 0.50f, 0.75f, 0.00f, 0.00f, 0.00f, 0.75f, 0.50f, 0.75f, 0.25f, 0.00f, 0.25f, 1.00f, 1.00f, 1.00f, 1.00f, 0.50f, 0.25f, 0.75f, 0.25f, 0.50f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.50f, 0.25f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 16.75f },
        { 0.50f, 0.75f, 1.00f, 1.00f, 0.50f, 1.00f, 0.75f, 0.00f, 0.00f, 0.00f, 1.00f, 0.75f, 1.00f, 0.25f, 0.00f, 0.25f, 1.00f, 1.00f, 1.00f, 1.00f, 0.50f, 0.50f, 0.50f, 0.25f, 0.50f, 0.25f, 0.25f, 0.50f, 0.25f, 0.50f, 0.25f, 0.50f, 0.50f, 0.25f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 18.50f },
        { 1.00f, 1.00f, 0.75f, 0.75f, 0.50f, 0.50f, 0.75f, 0.00f, 0.00f, 0.00f, 0.25f, 0.25f, 0.50f, 0.00f, 0.00f, 0.50f, 1.00f, 1.00f, 1.00f, 1.00f, 0.50f, 0.50f, 0.50f, 0.50f, 0.50f, 0.25f, 0.50f, 0.25f, 0.25f, 0.25f, 0.25f, 0.25f, 0.50f, 0.25f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 16.25f },
        { 1.00f, 0.75f, 0.75f, 0.75f, 0.25f, 0.25f, 1.00f, 0.00f, 0.00f, 0.00f, 0.25f, 0.25f, 0.25f, 0.00f, 0.00f, 1.00f, 0.75f, 1.00f, 1.00f, 1.00f, 0.50f, 0.75f, 0.50f, 1.00f, 0.25f, 0.25f, 0.50f, 0.50f, 0.50f, 0.25f, 0.25f, 0.25f, 0.50f, 0.50f, 0.25f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 0.00f, 17.00f },
    };
    static UInt gLevelTable[18][44] = {};
    static Bool gLevelTableCalculated = false;
    if (!gLevelTableCalculated) {
        for (UInt pos = 0; pos < 18; pos++) {
            for (UInt attr = 0; attr < 44; attr++)
                gLevelTable[pos][attr] = (UInt)(gLevelCalcTable[pos][attr] * 100.0f + 0.5f);
        }
        gLevelTableCalculated = true;
    }
    UChar attributes[43] = {
        player->mAttributes.ShotPower,
        player->mAttributes.LongShots,
        player->mAttributes.Dribbling,
        player->mAttributes.Technique,
        player->mAttributes.Crossing,
        player->mAttributes.Creativity,
        player->mAttributes.Finishing,
        player->mAttributes.FreeKicks,
        player->mAttributes.Corners,
        player->mAttributes.PenaltyShot,
        player->mAttributes.Passing,
        player->mAttributes.LongPassing,
        player->mAttributes.Flair,
        player->mAttributes.TacklingGeneral,
        player->mAttributes.ManMarking,
        player->mAttributes.Header,
        player->mAttributes.Touch,
        player->mAttributes.ForwardRuns,
        player->mAttributes.Acceleration,
        player->mAttributes.Pace,
        player->mAttributes.WorkRate,
        player->mAttributes.Strength,
        player->mAttributes.Agility,
        player->mAttributes.Jumping,
        player->mAttributes.Stamina,
        player->mAttributes.Anticipation,
        player->mAttributes.Aggression,
        player->mAttributes.Composure,
        player->mAttributes.Concentration,
        player->mAttributes.Decision,
        player->mAttributes.Determination,
        player->mAttributes.TeamWork,
        player->mAttributes.Consistency,
        player->mAttributes.Intimidation,
        player->mAttributes.Leadership,
        player->mAttributes.GkCrosses,
        player->mAttributes.Handling,
        player->mAttributes.Kicking,
        player->mAttributes.OneOnOne,
        player->mAttributes.Positioning,
        player->mAttributes.Punching,
        player->mAttributes.ShotStopping,
        player->mAttributes.Throwing
    };
    UInt intLevel = 0;
    for (UInt attr = 0; attr < 43; attr++)
        intLevel += attributes[attr] * gLevelTable[position.ToInt()][attr];
    if (gLevelTable[position.ToInt()][43])
        intLevel /= gLevelTable[position.ToInt()][43];
    if (intLevel > 99)
        intLevel = 99;
    float maxBias = player->mMaxBias;
    if (maxBias == 100.0f) {
        Int tmpLevel = intLevel + GetPlayerExperienceLevelModifier(player);
        ValidatePlayerLevel(tmpLevel);
        maxBias = (Float)tmpLevel;
    }
    UInt bias = (UInt)(player->mPositionBias[position.ToInt()] * (maxBias / 100.0f));
    Int finalLevel = (70 * bias + 30 * intLevel) / 100;
    if (experience)
        finalLevel += GetPlayerExperienceLevelModifier(player);
    ValidatePlayerLevel(finalLevel);
    return (UChar)finalLevel;
}

UChar FifamPlayerLevel::GetPlayerLevel(FifamPlayer *player, FifamPlayerPosition position, FifamPlayerPlayingStyle style, Bool experience) {
    return GetPlayerLevel13(player, position, style, experience);
}

UChar FifamPlayerLevel::GetPlayerLevel(FifamPlayer *player, FifamPlayerPosition position, Bool experience) {
    return GetPlayerLevel(player, position, player->mPlayingStyle, experience);
}

UChar FifamPlayerLevel::GetPlayerLevel(FifamPlayer *player, FifamPlayerPlayingStyle style, Bool experience) {
    return GetPlayerLevel(player, player->mMainPosition, style, experience);
}

UChar FifamPlayerLevel::GetPlayerLevel(FifamPlayer *player, Bool experience) {
    return GetPlayerLevel(player, player->mMainPosition, player->mPlayingStyle, experience);
}

Int FifamPlayerLevel::GetPlayerExperienceLevelModifier(FifamPlayer *player) {
    Int expLevel = player->mGeneralExperience / 3 - 3;
    if (!(player->mGeneralExperience / 3))
        expLevel = player->mGeneralExperience / 3 - 4;
    return expLevel;
}

void FifamPlayerLevel::ValidatePlayerLevel(Int &level) {
    if (level >= 1) {
        if (level > 99)
            level = 99;
    }
    else
        level = 1;
}

Vector<FifamPlayerPlayingStyle> FifamPlayerLevel::GetPlayingStylesForPosition(FifamPlayerPosition position, Bool includeNewStyles) {
    Vector<FifamPlayerPlayingStyle> result;
    switch (position.ToInt()) {
    case FifamPlayerPosition::None:
    case FifamPlayerPosition::GK:
        result = { FifamPlayerPlayingStyle::None };
        break;
    case FifamPlayerPosition::RB:
    case FifamPlayerPosition::RWB:
    case FifamPlayerPosition::LB:
    case FifamPlayerPosition::LWB:
        result = {
            FifamPlayerPlayingStyle::AttackingFB,
            FifamPlayerPlayingStyle::DefenceFB,
            FifamPlayerPlayingStyle::Libero,
            FifamPlayerPlayingStyle::SimplePasser,
            FifamPlayerPlayingStyle::BallWinner,
            FifamPlayerPlayingStyle::HardMan,
            FifamPlayerPlayingStyle::BoxToBox,
            FifamPlayerPlayingStyle::Busy,
            FifamPlayerPlayingStyle::Dribbler,
            FifamPlayerPlayingStyle::Winger
        };
        break;
    case FifamPlayerPosition::CB:
    case FifamPlayerPosition::SW:
        result = {
            FifamPlayerPlayingStyle::AttackingFB,
            FifamPlayerPlayingStyle::DefenceFB,
            FifamPlayerPlayingStyle::Libero,
            FifamPlayerPlayingStyle::SimplePasser,
            FifamPlayerPlayingStyle::BallWinner,
            FifamPlayerPlayingStyle::HardMan
        };
        break;
    case FifamPlayerPosition::ANC:
    case FifamPlayerPosition::DM:
        result = {
            FifamPlayerPlayingStyle::Libero,
            FifamPlayerPlayingStyle::SimplePasser,
            FifamPlayerPlayingStyle::BallWinner,
            FifamPlayerPlayingStyle::HardMan,
            FifamPlayerPlayingStyle::Holding,
            FifamPlayerPlayingStyle::BallWinnerMidfield,
            FifamPlayerPlayingStyle::BoxToBox,
            FifamPlayerPlayingStyle::Busy,
            FifamPlayerPlayingStyle::PlayMaker,
            FifamPlayerPlayingStyle::HoldsUp
        };
        break;
    case FifamPlayerPosition::RM:
    case FifamPlayerPosition::LM:
        result = {
            FifamPlayerPlayingStyle::SimplePasser,
            FifamPlayerPlayingStyle::HardMan,
            FifamPlayerPlayingStyle::Holding,
            FifamPlayerPlayingStyle::BallWinnerMidfield,
            FifamPlayerPlayingStyle::BoxToBox,
            FifamPlayerPlayingStyle::Busy,
            FifamPlayerPlayingStyle::PlayMaker,
            FifamPlayerPlayingStyle::Dribbler,
            FifamPlayerPlayingStyle::Winger,
            FifamPlayerPlayingStyle::RunsChannels,
            FifamPlayerPlayingStyle::HoldsUp
        };
        break;
    case FifamPlayerPosition::CM:
        result = {
            FifamPlayerPlayingStyle::SimplePasser,
            FifamPlayerPlayingStyle::HardMan,
            FifamPlayerPlayingStyle::Holding,
            FifamPlayerPlayingStyle::BallWinnerMidfield,
            FifamPlayerPlayingStyle::BoxToBox,
            FifamPlayerPlayingStyle::Busy,
            FifamPlayerPlayingStyle::PlayMaker,
            FifamPlayerPlayingStyle::Dribbler,
            FifamPlayerPlayingStyle::HoldsUp
        };
        break;
    case FifamPlayerPosition::RW:
    case FifamPlayerPosition::LW:
        result = {
            FifamPlayerPlayingStyle::Winger,
            FifamPlayerPlayingStyle::RunsChannels,
            FifamPlayerPlayingStyle::DribblerAttack
        };
        break;
    case FifamPlayerPosition::AM:
        result = {
            FifamPlayerPlayingStyle::Holding,
            FifamPlayerPlayingStyle::BoxToBox,
            FifamPlayerPlayingStyle::Busy,
            FifamPlayerPlayingStyle::PlayMaker,
            FifamPlayerPlayingStyle::Dribbler,
            FifamPlayerPlayingStyle::HoldsUp
        };
        break;
    case FifamPlayerPosition::CF:
        result = {
            FifamPlayerPlayingStyle::PenaltyBox,
            FifamPlayerPlayingStyle::RunsChannels,
            FifamPlayerPlayingStyle::DribblerAttack,
            FifamPlayerPlayingStyle::HoldsUp
        };
    case FifamPlayerPosition::ST:
        result = {
            FifamPlayerPlayingStyle::TargetMan,
            FifamPlayerPlayingStyle::PenaltyBox,
            FifamPlayerPlayingStyle::RunsChannels,
            FifamPlayerPlayingStyle::DribblerAttack,
            FifamPlayerPlayingStyle::HoldsUp
        };
    }
    if (position == FifamPlayerPosition::LB || position == FifamPlayerPosition::LWB || position == FifamPlayerPosition::LM || position == FifamPlayerPosition::LW)
        result.push_back(FifamPlayerPlayingStyle::PullsWideLeft);
    else if (position == FifamPlayerPosition::RB || position == FifamPlayerPosition::RWB || position == FifamPlayerPosition::RM || position == FifamPlayerPosition::RW)
        result.push_back(FifamPlayerPlayingStyle::PullsWideRight);
    if (includeNewStyles) {
        if (position == FifamPlayerPosition::RW || position == FifamPlayerPosition::LW || position == FifamPlayerPosition::CF || position == FifamPlayerPosition::ST)
            result.push_back(FifamPlayerPlayingStyle::BusyAttacker);
        if (position == FifamPlayerPosition::CB || position == FifamPlayerPosition::SW || position == FifamPlayerPosition::ANC || position == FifamPlayerPosition::DM)
            result.push_back(FifamPlayerPlayingStyle::TowerStrength);
        if (position != FifamPlayerPosition::None && position != FifamPlayerPosition::GK)
            result.push_back(FifamPlayerPlayingStyle::DistanceShooter);
    }
    return result;
}
